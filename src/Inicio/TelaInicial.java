/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Inicio;

import Consultas.Fechamento;
import Consultas.TelaConsultas;
import Utilitários.Conexao;
import UtilitÃ¡rios.Conexao;
import UtilitÃ¡rios.Data;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mike
 */
public class TelaInicial extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    Conexao Conecta_banco;
    String data;
    String troco;

    public TelaInicial() throws SQLException {
        initComponents();
        
         Object resposta;
         resposta = JOptionPane.showInputDialog(null, "Digite a data de hoje separada por pontos:");
         if(resposta==null){
         System.exit(0);
         }
         resposta.toString();
         data = (String) resposta;
         
         Object resposta2;
         resposta2 = JOptionPane.showInputDialog(null, "Digite o fundo de troco de hoje, separando centavos por vÃ­rgula:");
         if(resposta2==null){
         System.exit(0);
         }
         resposta.toString();
         troco = (String) resposta2;

        Conecta_banco = new Conexao();
        Conecta_banco.Conecta();
        Conecta_banco.ExecuteSQL("Select * from Vendas_prod;");

        Fundo.setText("Fundo de Troco de hoje Ã©: R$ " + troco);
        Pesquisa.setText(data);
        button54.setEnabled(false);
        button56.setEnabled(false);
        CustoFixo.setEditable(false);
        Lucro.setVisible(false);
        CustoDiario.setVisible(false);
        
        
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro);
        }
        
        Data D = new Data();
        D.le_data();
        D.toString();
        LbData.setText(D.dia + " de " + D.mes + " de " + D.ano);
    }

    public JTable getjTable1() {
        return jTable1;
    }

    public void setjTable1(JTable jTable1) {
        this.jTable1 = jTable1;
    }
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        LbData = new java.awt.Label();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        btacai300 = new java.awt.Button();
        label1 = new java.awt.Label();
        btacai500 = new java.awt.Button();
        btacai1l = new java.awt.Button();
        checkmor = new java.awt.Checkbox();
        checkban = new java.awt.Checkbox();
        checkaba = new java.awt.Checkbox();
        checkpaco = new java.awt.Checkbox();
        checkltpo = new java.awt.Checkbox();
        checkgran = new java.awt.Checkbox();
        checkovo = new java.awt.Checkbox();
        checkcas = new java.awt.Checkbox();
        checkltcon = new java.awt.Checkbox();
        checkchocb = new java.awt.Checkbox();
        checkfloca = new java.awt.Checkbox();
        checkgranu = new java.awt.Checkbox();
        checkconf = new java.awt.Checkbox();
        checkbom = new java.awt.Checkbox();
        checkwhey = new java.awt.Checkbox();
        label2 = new java.awt.Label();
        btacaifit300 = new java.awt.Button();
        label3 = new java.awt.Label();
        btacaithal300 = new java.awt.Button();
        btacaihmon300 = new java.awt.Button();
        btacaihulk300 = new java.awt.Button();
        label4 = new java.awt.Label();
        btacaifit500 = new java.awt.Button();
        btacaithal500 = new java.awt.Button();
        btacaihmon500 = new java.awt.Button();
        btacaihulk500 = new java.awt.Button();
        label10 = new java.awt.Label();
        btsucoacai300 = new java.awt.Button();
        btsucoacai500 = new java.awt.Button();
        btsucoacai700 = new java.awt.Button();
        checkmel = new java.awt.Checkbox();
        checkextra = new java.awt.Checkbox();
        jLabel3 = new javax.swing.JLabel();
        btlimpar = new java.awt.Button();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btshake300 = new java.awt.Button();
        btshake500 = new java.awt.Button();
        btshake700 = new java.awt.Button();
        checkbox16 = new java.awt.Checkbox();
        checkbox17 = new java.awt.Checkbox();
        checkbox18 = new java.awt.Checkbox();
        checkbox19 = new java.awt.Checkbox();
        checkbox20 = new java.awt.Checkbox();
        checkbox21 = new java.awt.Checkbox();
        checkbox22 = new java.awt.Checkbox();
        checkbox23 = new java.awt.Checkbox();
        checkbox24 = new java.awt.Checkbox();
        checkbox25 = new java.awt.Checkbox();
        checkbox26 = new java.awt.Checkbox();
        checkbox27 = new java.awt.Checkbox();
        checkbox28 = new java.awt.Checkbox();
        checkbox29 = new java.awt.Checkbox();
        checkbox30 = new java.awt.Checkbox();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();
        checkbox31 = new java.awt.Checkbox();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        button7 = new java.awt.Button();
        label16 = new java.awt.Label();
        button8 = new java.awt.Button();
        button9 = new java.awt.Button();
        button10 = new java.awt.Button();
        button11 = new java.awt.Button();
        button12 = new java.awt.Button();
        label17 = new java.awt.Label();
        button13 = new java.awt.Button();
        checkbox1 = new java.awt.Checkbox();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        label7 = new java.awt.Label();
        button15 = new java.awt.Button();
        button16 = new java.awt.Button();
        button17 = new java.awt.Button();
        button18 = new java.awt.Button();
        button19 = new java.awt.Button();
        button20 = new java.awt.Button();
        button21 = new java.awt.Button();
        button22 = new java.awt.Button();
        button23 = new java.awt.Button();
        button24 = new java.awt.Button();
        button25 = new java.awt.Button();
        button26 = new java.awt.Button();
        button27 = new java.awt.Button();
        button28 = new java.awt.Button();
        button29 = new java.awt.Button();
        button30 = new java.awt.Button();
        button31 = new java.awt.Button();
        button32 = new java.awt.Button();
        button33 = new java.awt.Button();
        button34 = new java.awt.Button();
        button35 = new java.awt.Button();
        button36 = new java.awt.Button();
        label8 = new java.awt.Label();
        button37 = new java.awt.Button();
        button38 = new java.awt.Button();
        button39 = new java.awt.Button();
        button40 = new java.awt.Button();
        button41 = new java.awt.Button();
        button42 = new java.awt.Button();
        button43 = new java.awt.Button();
        button44 = new java.awt.Button();
        button45 = new java.awt.Button();
        button46 = new java.awt.Button();
        button47 = new java.awt.Button();
        label9 = new java.awt.Label();
        button48 = new java.awt.Button();
        button49 = new java.awt.Button();
        button50 = new java.awt.Button();
        button51 = new java.awt.Button();
        button52 = new java.awt.Button();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Pesquisa = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        button3 = new java.awt.Button();
        label11 = new java.awt.Label();
        Venda = new java.awt.TextField();
        label12 = new java.awt.Label();
        CustoFixo = new java.awt.TextField();
        label13 = new java.awt.Label();
        Desperdicio = new java.awt.TextField();
        label14 = new java.awt.Label();
        CustoDiario = new java.awt.TextField();
        label15 = new java.awt.Label();
        Lucro = new java.awt.TextField();
        button5 = new java.awt.Button();
        button6 = new java.awt.Button();
        button54 = new java.awt.Button();
        button56 = new java.awt.Button();
        button14 = new java.awt.Button();
        txttotal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        button4 = new java.awt.Button();
        Fundo = new javax.swing.JLabel();
        label18 = new java.awt.Label();
        Valorpg = new javax.swing.JTextField();
        txttotalcopia = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        trocopg = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inicio");

        jLayeredPane1.setBackground(new java.awt.Color(102, 255, 0));

        jPanel1.setBackground(new java.awt.Color(21, 190, 21));

        jLayeredPane2.setBackground(new java.awt.Color(57, 159, 57));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inicio/602657_3375101876184_527191515_n.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inicio/aÃ§ai-Nature.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(71, 71, 71))
        );

        jPanel4.setBounds(30, -10, 230, 740);
        jLayeredPane2.add(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inicio/titulo.jpg"))); // NOI18N
        jLabel2.setText("Sistema Gerenciador");

        LbData.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LbData.setForeground(new java.awt.Color(255, 255, 255));
        LbData.setText("Data");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(168, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1099, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LbData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(LbData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        jPanel2.setBounds(-20, 0, 1390, 150);
        jLayeredPane2.add(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTable1MouseMoved(evt);
            }
        });
        jTable1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jTable1VetoableChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(1).setMinWidth(60);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(60);

        jScrollPane2.setBounds(1100, 170, 220, 370);
        jLayeredPane2.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));

        btacai300.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacai300.setLabel("AÃ§aÃ­ 300");
        btacai300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacai300ActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label1.setText("AÃ§aÃ­ na Tigela");

        btacai500.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacai500.setLabel("AÃ§aÃ­ 500");
        btacai500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacai500ActionPerformed(evt);
            }
        });

        btacai1l.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacai1l.setLabel("AÃ§aÃ­ 1 L.");
        btacai1l.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacai1lActionPerformed(evt);
            }
        });

        checkmor.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkmor.setLabel("Morango");
        checkmor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkmorMouseClicked(evt);
            }
        });

        checkban.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkban.setLabel("Banana");
        checkban.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbanMouseClicked(evt);
            }
        });

        checkaba.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkaba.setLabel("Abacaxi");
        checkaba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkabaMouseClicked(evt);
            }
        });
        checkaba.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkabaItemStateChanged(evt);
            }
        });

        checkpaco.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkpaco.setLabel("PaÃ§oca");
        checkpaco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkpacoMouseClicked(evt);
            }
        });

        checkltpo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkltpo.setLabel("Leite em PÃ³");
        checkltpo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkltpoMouseClicked(evt);
            }
        });

        checkgran.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkgran.setLabel("Granola");
        checkgran.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkgranMouseClicked(evt);
            }
        });

        checkovo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkovo.setLabel("Ovomaltine");
        checkovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkovoMouseClicked(evt);
            }
        });

        checkcas.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkcas.setLabel("Castanha");
        checkcas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkcasMouseClicked(evt);
            }
        });

        checkltcon.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkltcon.setLabel("L. Condensado");
        checkltcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkltconMouseClicked(evt);
            }
        });

        checkchocb.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkchocb.setLabel("Choco Ball");
        checkchocb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkchocbMouseClicked(evt);
            }
        });

        checkfloca.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkfloca.setLabel("Floco de Arroz");
        checkfloca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkflocaMouseClicked(evt);
            }
        });

        checkgranu.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkgranu.setLabel("Granulado");
        checkgranu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkgranuMouseClicked(evt);
            }
        });

        checkconf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkconf.setLabel("Confete");
        checkconf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkconfMouseClicked(evt);
            }
        });

        checkbom.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbom.setLabel("Bombom");
        checkbom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbomMouseClicked(evt);
            }
        });

        checkwhey.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkwhey.setLabel("Whey");
        checkwhey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkwheyMouseClicked(evt);
            }
        });

        label2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label2.setText("AÃ§aÃ­ da Casa");

        btacaifit300.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacaifit300.setLabel("AÃ§aÃ­ Fitness");
        btacaifit300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacaifit300ActionPerformed(evt);
            }
        });

        label3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label3.setText("300 ml");

        btacaithal300.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacaithal300.setLabel("Thal AÃ§aÃ­");
        btacaithal300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacaithal300ActionPerformed(evt);
            }
        });

        btacaihmon300.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacaihmon300.setLabel("H. Monster");
        btacaihmon300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacaihmon300ActionPerformed(evt);
            }
        });

        btacaihulk300.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacaihulk300.setLabel("P. Hulk");
        btacaihulk300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacaihulk300ActionPerformed(evt);
            }
        });

        label4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label4.setText("500 ml");

        btacaifit500.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacaifit500.setLabel("AÃ§aÃ­ Fitness");
        btacaifit500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacaifit500ActionPerformed(evt);
            }
        });

        btacaithal500.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacaithal500.setLabel("Thal AÃ§aÃ­");
        btacaithal500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacaithal500ActionPerformed(evt);
            }
        });

        btacaihmon500.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacaihmon500.setLabel("H. Monster");
        btacaihmon500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacaihmon500ActionPerformed(evt);
            }
        });

        btacaihulk500.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btacaihulk500.setLabel("P. Hulk");
        btacaihulk500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacaihulk500ActionPerformed(evt);
            }
        });

        label10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label10.setText("Suco de AÃ§aÃ­");

        btsucoacai300.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btsucoacai300.setLabel("300 ml");
        btsucoacai300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsucoacai300ActionPerformed(evt);
            }
        });

        btsucoacai500.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btsucoacai500.setLabel("500 ml");
        btsucoacai500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsucoacai500ActionPerformed(evt);
            }
        });

        btsucoacai700.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btsucoacai700.setLabel("700 ml");
        btsucoacai700.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsucoacai700ActionPerformed(evt);
            }
        });

        checkmel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkmel.setLabel("Mel");
        checkmel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkmelMouseClicked(evt);
            }
        });

        checkextra.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkextra.setLabel("Extra");
        checkextra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkextraMouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inicio/acai2013.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");

        btlimpar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btlimpar.setLabel("Limpar Complementos");
        btlimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkltcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkconf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkltpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkmor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkchocb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkgran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkfloca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkaba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkwhey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkgranu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkcas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkpaco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkextra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btsucoacai300, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btsucoacai500, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(btsucoacai700, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(btacaifit500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btacaithal500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btacaihmon500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btacaihulk500, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(btacaifit300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btacaithal300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btacaihmon300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(checkmel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btacaihulk300, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btacai300, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btacai500, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btacai1l, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btlimpar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkltpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkgran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkcas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkltcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkchocb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkfloca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkgranu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkconf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkwhey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btacaifit300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btacaithal300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btacaihmon300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btacaihulk300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btacaihmon500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btacaithal500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btacaifit500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btacaihulk500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btacai300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btacai500, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btacai1l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(checkpaco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkmor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkaba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(71, 71, 71)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkextra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkmel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btsucoacai500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btsucoacai300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btsucoacai700, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btlimpar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("AÃ§aÃ­", jPanel3);

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inicio/shake menu.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        btshake300.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btshake300.setLabel("Shake 300");
        btshake300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btshake300ActionPerformed(evt);
            }
        });

        btshake500.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btshake500.setLabel("Shake 500");
        btshake500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btshake500ActionPerformed(evt);
            }
        });

        btshake700.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btshake700.setLabel("Shake 700");
        btshake700.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btshake700ActionPerformed(evt);
            }
        });

        checkbox16.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox16.setLabel("Morango");
        checkbox16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox16MouseClicked(evt);
            }
        });

        checkbox17.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox17.setLabel("Banana");
        checkbox17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox17MouseClicked(evt);
            }
        });

        checkbox18.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox18.setLabel("Abacaxi");
        checkbox18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox18MouseClicked(evt);
            }
        });

        checkbox19.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox19.setLabel("PaÃ§oca");
        checkbox19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox19MouseClicked(evt);
            }
        });

        checkbox20.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox20.setLabel("Leite em PÃ³");
        checkbox20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox20MouseClicked(evt);
            }
        });

        checkbox21.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox21.setLabel("Granola");
        checkbox21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox21MouseClicked(evt);
            }
        });

        checkbox22.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox22.setLabel("Ovomaltine");
        checkbox22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox22MouseClicked(evt);
            }
        });

        checkbox23.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox23.setLabel("Castanha");
        checkbox23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox23MouseClicked(evt);
            }
        });

        checkbox24.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox24.setLabel("L. Condensado");
        checkbox24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox24MouseClicked(evt);
            }
        });

        checkbox25.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox25.setLabel("Choco Ball");
        checkbox25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox25MouseClicked(evt);
            }
        });

        checkbox26.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox26.setLabel("Floco de Arroz");
        checkbox26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox26MouseClicked(evt);
            }
        });

        checkbox27.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox27.setLabel("Granulado");
        checkbox27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox27MouseClicked(evt);
            }
        });

        checkbox28.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox28.setLabel("Confete");
        checkbox28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox28MouseClicked(evt);
            }
        });

        checkbox29.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox29.setLabel("Bombom");
        checkbox29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox29MouseClicked(evt);
            }
        });

        checkbox30.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox30.setLabel("Whey");
        checkbox30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox30MouseClicked(evt);
            }
        });

        label5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label5.setText("Tamanhos");

        label6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label6.setText("Complementos Adicionais");

        checkbox31.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        checkbox31.setLabel("Saborizante");
        checkbox31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox31MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(checkbox16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(checkbox17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(checkbox18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(btshake300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48)
                                        .addComponent(btshake500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btshake700, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(checkbox19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkbox24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbox20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbox28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkbox29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbox25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbox21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkbox30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbox22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbox26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkbox31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbox23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbox27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addContainerGap(49, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btshake500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btshake300, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btshake700, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(checkbox19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkbox20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkbox24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkbox28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68))))
        );

        jTabbedPane1.addTab("Shake", jPanel5);

        jPanel8.setBackground(new java.awt.Color(255, 255, 153));
        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 3, true));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inicio/salgado.JPG"))); // NOI18N
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        button7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button7.setLabel("DogÃ£o");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        label16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label16.setText("Salgados");

        button8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button8.setLabel("Esfirra de Frango");
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        button9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button9.setLabel("T. Palmito");
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        button10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button10.setLabel("Esfirra de Carne");
        button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button10ActionPerformed(evt);
            }
        });

        button11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button11.setLabel("Enrolado De P. Q.");
        button11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button11ActionPerformed(evt);
            }
        });

        button12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button12.setLabel("Esf. Carne Seca");
        button12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button12ActionPerformed(evt);
            }
        });

        label17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label17.setText("Caldos");

        button13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button13.setLabel("Caldo de Quenga");
        button13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button13ActionPerformed(evt);
            }
        });

        checkbox1.setLabel("Desconto Combo");
        checkbox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(label16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(71, 71, 71))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)))
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(label16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(label17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(button13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Salgado", jPanel8);

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inicio/sucos menu.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        label7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label7.setText("Sucos com Ã�gua");

        button15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button15.setLabel("Abacaxi");
        button15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button15ActionPerformed(evt);
            }
        });

        button16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button16.setLabel("A. HortelÃ£");
        button16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button16ActionPerformed(evt);
            }
        });

        button17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button17.setLabel("Acerola");
        button17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button17ActionPerformed(evt);
            }
        });

        button18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button18.setLabel("CajÃ¡");
        button18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button18ActionPerformed(evt);
            }
        });

        button19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button19.setLabel("CajÃº");
        button19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button19ActionPerformed(evt);
            }
        });

        button20.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button20.setLabel("Coco");
        button20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button20ActionPerformed(evt);
            }
        });

        button21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button21.setLabel("Clorofila");
        button21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button21ActionPerformed(evt);
            }
        });

        button22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button22.setLabel("CupuaÃ§u");
        button22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button22ActionPerformed(evt);
            }
        });

        button23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button23.setLabel("F. Vermelhas");
        button23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button23ActionPerformed(evt);
            }
        });

        button24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button24.setLabel("Goiaba");
        button24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button24ActionPerformed(evt);
            }
        });

        button25.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button25.setLabel("Kiwi");
        button25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button25ActionPerformed(evt);
            }
        });

        button26.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button26.setLabel("LimÃ£o");
        button26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button26ActionPerformed(evt);
            }
        });

        button27.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button27.setLabel("MamÃ£o");
        button27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button27ActionPerformed(evt);
            }
        });

        button28.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button28.setLabel("MamÃ£o c/ Laranja");
        button28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button28ActionPerformed(evt);
            }
        });

        button29.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button29.setLabel("Manga");
        button29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button29ActionPerformed(evt);
            }
        });

        button30.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button30.setLabel("MaracujÃ¡");
        button30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button30ActionPerformed(evt);
            }
        });

        button31.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button31.setLabel("MelÃ£o");
        button31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button31ActionPerformed(evt);
            }
        });

        button32.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button32.setLabel("Morango");
        button32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button32ActionPerformed(evt);
            }
        });

        button33.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button33.setLabel("Melancia");
        button33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button33ActionPerformed(evt);
            }
        });

        button34.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button34.setLabel("PÃªssego");
        button34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button34ActionPerformed(evt);
            }
        });

        button35.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button35.setLabel("Tangerina");
        button35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button35ActionPerformed(evt);
            }
        });

        button36.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button36.setLabel("Uva");
        button36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button36ActionPerformed(evt);
            }
        });

        label8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label8.setText("Sucos com Leite");

        button37.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button37.setLabel("Abacaxi");
        button37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button37ActionPerformed(evt);
            }
        });

        button38.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button38.setLabel("A. HortelÃ£");
        button38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button38ActionPerformed(evt);
            }
        });

        button39.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button39.setLabel("Coco");
        button39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button39ActionPerformed(evt);
            }
        });

        button40.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button40.setLabel("F. Vermelhas");
        button40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button40ActionPerformed(evt);
            }
        });

        button41.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button41.setLabel("Goiaba");
        button41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button41ActionPerformed(evt);
            }
        });

        button42.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button42.setLabel("LimÃ£o");
        button42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button42ActionPerformed(evt);
            }
        });

        button43.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button43.setLabel("MamÃ£o");
        button43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button43ActionPerformed(evt);
            }
        });

        button44.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button44.setLabel("Manga");
        button44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button44ActionPerformed(evt);
            }
        });

        button45.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button45.setLabel("MaracujÃ¡");
        button45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button45ActionPerformed(evt);
            }
        });

        button46.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button46.setLabel("Morango");
        button46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button46ActionPerformed(evt);
            }
        });

        button47.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button47.setLabel("PÃªssego");
        button47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button47ActionPerformed(evt);
            }
        });

        label9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label9.setText("Outras Bebidas");

        button48.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button48.setLabel("Ã�gua");
        button48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button48ActionPerformed(evt);
            }
        });

        button49.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button49.setLabel("Coca");
        button49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button49ActionPerformed(evt);
            }
        });

        button50.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button50.setLabel("Fanta");
        button50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button50ActionPerformed(evt);
            }
        });

        button51.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button51.setLabel("Schwepes");
        button51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button51ActionPerformed(evt);
            }
        });

        button52.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button52.setLabel("GuaranÃ¡ Antartica");
        button52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button52ActionPerformed(evt);
            }
        });

        button1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button1.setLabel("Brahma");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button2.setLabel("Budwiser");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(button33, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(button27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(button24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(button20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(button15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(button16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(button21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(button25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(button29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(button34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(button22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(button17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(button26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(button30, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(button18, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(button19, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(button23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(button28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(button31, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(button32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(button35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(button36, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(button42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(button37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(button48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(button49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(button50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(button51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(button52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(button16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(button15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(button18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(button19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(button24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(button25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(button26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(button28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(button27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(button29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(button30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button31, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(button33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(button34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(button35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(button36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(button42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(button43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(button44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(button45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(button46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(button39, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(button47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button50, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button51, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button52, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sucos", jPanel6);

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inicio/gerencia.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        jLabel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        Pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesquisaActionPerformed(evt);
            }
        });

        jLabel9.setText("RelatÃ³rio");

        button3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        button3.setLabel("Pesquisar");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        label11.setText("Total Venda");

        label12.setText("Custo Fixo");

        CustoFixo.setText("187,00");

        label13.setText("Desperdicio");

        label14.setText("Custo Diario");

        label15.setText("Lucro");

        button5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        button5.setLabel("Gravar");
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        button6.setLabel("Sair do Sistema");
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button54.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button54.setLabel("Fechamento Mensal");
        button54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button54ActionPerformed(evt);
            }
        });

        button56.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button56.setLabel("Consultas");
        button56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button56ActionPerformed(evt);
            }
        });

        button14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button14.setLabel("Ativar Consultas");
        button14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(button56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(152, 152, 152))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(label11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(label12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Venda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                            .addComponent(CustoFixo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Lucro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(Desperdicio, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(CustoDiario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(label14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(button14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(6, 6, 6))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 377, Short.MAX_VALUE)))
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(button54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Venda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Desperdicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(41, 41, 41)
                                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(label14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CustoFixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustoDiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Lucro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(button14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button54, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button56, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Gerencial", jPanel7);

        jTabbedPane1.setBounds(280, 160, 760, 470);
        jLayeredPane2.add(jTabbedPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTabbedPane1.getAccessibleContext().setAccessibleName("AÃ§ai");

        txttotal.setBackground(new java.awt.Color(231, 230, 230));
        txttotal.setFont(new java.awt.Font("Wickenden Cafe NDP", 1, 36)); // NOI18N
        txttotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalActionPerformed(evt);
            }
        });
        txttotal.setBounds(1140, 550, 180, 60);
        jLayeredPane2.add(txttotal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setFont(new java.awt.Font("Wickenden Cafe NDP", 1, 24)); // NOI18N
        jLabel5.setText("R$");
        jLabel5.setBounds(1100, 550, 40, 60);
        jLayeredPane2.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        button4.setBackground(new java.awt.Color(153, 153, 255));
        button4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        button4.setLabel("Fechar Venda");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });
        button4.setBounds(1130, 630, 190, 40);
        jLayeredPane2.add(button4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Fundo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Fundo.setForeground(new java.awt.Color(255, 255, 255));
        Fundo.setText("fundo");
        Fundo.setBounds(300, 650, 350, 14);
        jLayeredPane2.add(Fundo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        label18.setBackground(new java.awt.Color(21, 190, 21));
        label18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label18.setForeground(new java.awt.Color(255, 255, 255));
        label18.setText("Calculadora:");
        label18.setBounds(680, 630, 100, 40);
        jLayeredPane2.add(label18, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Valorpg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ValorpgKeyPressed(evt);
            }
        });
        Valorpg.setBounds(779, 640, 60, 30);
        jLayeredPane2.add(Valorpg, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txttotalcopia.setBounds(870, 640, 60, 30);
        jLayeredPane2.add(txttotalcopia, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("=");
        jLabel11.setBounds(940, 640, 30, 30);
        jLayeredPane2.add(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("-");
        jLabel12.setBounds(850, 640, 20, 20);
        jLayeredPane2.add(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        trocopg.setBounds(960, 640, 70, 30);
        jLayeredPane2.add(trocopg, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1370, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jPanel1.setBounds(0, 0, 1370, 770);
        jLayeredPane1.add(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1369, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1385)/2, (screenSize.height-762)/2, 1385, 762);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jTable1VetoableChange
        
    }//GEN-LAST:event_jTable1VetoableChange

    private void txttotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalActionPerformed

    }//GEN-LAST:event_txttotalActionPerformed

    private void jTable1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseMoved

    private void btacaihmon500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacaihmon500ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"H. Monster 500", (10.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (7,'" + data + "', 5.07, 10.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btacaihmon500ActionPerformed

    private void btacaithal500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacaithal500ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Thal AÃ§ai 500", (10.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (6,'" + data + "', 5.0, 10.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btacaithal500ActionPerformed

    private void checkabaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkabaItemStateChanged
    }//GEN-LAST:event_checkabaItemStateChanged

    private void checkbanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbanMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Banana", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (13,'" + data + "', 0.07, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbanMouseClicked

    private void checkmorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkmorMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Morango", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (12,'" + data + "', 0.42, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkmorMouseClicked

    private void btacai500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacai500ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"AÃ§ai 500", (6.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (10,'" + data + "', 2.95, 6.00);";

            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
        ComplementoGratis();
    }//GEN-LAST:event_btacai500ActionPerformed

    private void btacai300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacai300ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"AÃ§ai 300", (4.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (9,'" + data + "', 1.77, 4.00);";

            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
        ComplementoGratis();
    }//GEN-LAST:event_btacai300ActionPerformed

    private void btlimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlimparActionPerformed
          checkaba.setState(false);
          checkban.setState(false);
          checkmor.setState(false);
          checkovo.setState(false);
          checkbom.setState(false);
          checkwhey.setState(false);
          checkpaco.setState(false);
          checkmel.setState(false);
          checkextra.setState(false);
          checkltpo.setState(false);
          checkltcon.setState(false);
          checkgran.setState(false);
          checkgranu.setState(false);
          checkchocb.setState(false);
          checkconf.setState(false);
          checkfloca.setState(false);
          checkcas.setState(false);          
    }//GEN-LAST:event_btlimparActionPerformed

    private void checkabaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkabaMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Abacaxi", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (14,'" + data + "', 0.24, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkabaMouseClicked

    private void btacai1lActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacai1lActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"AÃ§ai 1 Litro", (13.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (11,'" + data + "', 5.90, 12.50);";

            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
        ComplementoGratis();
    }//GEN-LAST:event_btacai1lActionPerformed

    private void checkpacoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkpacoMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"PaÃ§oca", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (15,'" + data + "', 0.50, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkpacoMouseClicked

    private void checkltpoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkltpoMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Leite em PÃ³", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (16,'" + data + "', 0.36, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkltpoMouseClicked

    private void checkgranMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkgranMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Granola", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (17,'" + data + "', 0.32, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkgranMouseClicked

    private void checkovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkovoMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Ovomaltine", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (18,'" + data + "', 0.36, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkovoMouseClicked

    private void checkcasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkcasMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Castanha", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (19,'" + data + "', 0.48, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkcasMouseClicked

    private void checkltconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkltconMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"L. Condensado", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (20,'" + data + "', 0.30, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkltconMouseClicked

    private void checkchocbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkchocbMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"ChocoBall", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (21,'" + data + "', 0.35, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkchocbMouseClicked

    private void checkflocaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkflocaMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Flocos de Arroz", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (22,'" + data + "', 0.40, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkflocaMouseClicked

    private void checkgranuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkgranuMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Granulado", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (23,'" + data + "', 0.53, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkgranuMouseClicked

    private void checkconfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkconfMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Confete", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (24,'" + data + "', 1.39, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkconfMouseClicked

    private void checkbomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbomMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Bombom", (1.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (25,'" + data + "', 0.89, 1.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbomMouseClicked

    private void checkwheyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkwheyMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Whey Protein", (2.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (26,'" + data + "', 0.75, 2.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkwheyMouseClicked

    private void checkmelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkmelMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Mel", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (29,'" + data + "', 0.35, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkmelMouseClicked

    private void checkextraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkextraMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Extra", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (30,'" + data + "', 0.40, 0.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkextraMouseClicked

    private void btacaifit300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacaifit300ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Fitness 300", (6.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (1,'" + data + "', 2.73, 6.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btacaifit300ActionPerformed

    private void btacaithal300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacaithal300ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Thal AÃ§ai 300", (7.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (2,'" + data + "', 2.90, 7.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btacaithal300ActionPerformed

    private void btacaihmon300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacaihmon300ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"H. Monster 300", (7.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (3,'" + data + "', 3.54, 7.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btacaihmon300ActionPerformed

    private void btacaihulk300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacaihulk300ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"P. Hulk 300", (8.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (4,'" + data + "', 3.72, 8.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btacaihulk300ActionPerformed

    private void btacaifit500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacaifit500ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Fitness 500", (8.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (15,'" + data + "', 3.99, 8.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btacaifit500ActionPerformed

    private void btacaihulk500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacaihulk500ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"P. Hulk 500", (10.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (8,'" + data + "', 5.36, 10.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btacaihulk500ActionPerformed

    private void btsucoacai300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsucoacai300ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"S. AÃ§ai 300", (4.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (76,'" + data + "', 1.77, 4.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btsucoacai300ActionPerformed

    private void btsucoacai500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsucoacai500ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"S. AÃ§ai 500", (5.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (77,'" + data + "', 2.75, 5.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btsucoacai500ActionPerformed

    private void btsucoacai700ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsucoacai700ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"S. AÃ§ai 700", (7.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (78,'" + data + "', 4.13, 7.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btsucoacai700ActionPerformed

    private void btshake300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btshake300ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Shake 300", (3.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (31,'" + data + "', 1.27, 3.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btshake300ActionPerformed

    private void btshake500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btshake500ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Shake 500", (4.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (32,'" + data + "', 1.94, 4.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btshake500ActionPerformed

    private void btshake700ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btshake700ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Shake 700", (5.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (33,'" + data + "', 2.44, 5.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_btshake700ActionPerformed

    private void checkbox31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox31MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Extra Sabor", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (34,'" + data + "', 0.50, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox31MouseClicked

    private void button15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button15ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Abacaxi AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (35,'" + data + "', 1.47, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button15ActionPerformed

    private void button16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button16ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco A.Hortela", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (36,'" + data + "', 1.47, 6.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button16ActionPerformed

    private void button17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button17ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Acerola AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (37,'" + data + "', 1.19, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button17ActionPerformed

    private void button18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button18ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Caja AG", (3.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (38,'" + data + "', 1.65, 3.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button18ActionPerformed

    private void button19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button19ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Caju AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (39,'" + data + "', 1.45, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button19ActionPerformed

    private void button20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button20ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Coco AG", (3.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (40,'" + data + "', 1.93, 3.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button20ActionPerformed

    private void button21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button21ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Clorofila AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (42,'" + data + "', 1.59, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button21ActionPerformed

    private void button22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button22ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco CupuaÃ§u AG", (4.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (43,'" + data + "', 0.89, 4.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button22ActionPerformed

    private void button23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button23ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco F. Vermelhas AG", (3.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (44,'" + data + "', 1.75, 3.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button23ActionPerformed

    private void button24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button24ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Goiaba AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (45,'" + data + "', 1.15, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button24ActionPerformed

    private void button25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button25ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Kiwi AG", (3.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (46,'" + data + "', 1.75, 3.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button25ActionPerformed

    private void button26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button26ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Limao AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (47,'" + data + "', 1.15, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button26ActionPerformed

    private void button28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button28ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco M. Laranja AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (49,'" + data + "', 1.53, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button28ActionPerformed

    private void button27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button27ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Mamao AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (48,'" + data + "', 1.29, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button27ActionPerformed

    private void button29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button29ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Manga AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (50,'" + data + "', 1.29, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button29ActionPerformed

    private void button30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button30ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Maracuja AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (51,'" + data + "', 1.85, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button30ActionPerformed

    private void button31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button31ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Melao AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (52,'" + data + "', 1.29, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button31ActionPerformed

    private void button32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button32ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Morango AG", (3.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (53,'" + data + "', 1.69, 3.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button32ActionPerformed

    private void button33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button33ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Melancia AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (54,'" + data + "', 1.57, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button33ActionPerformed

    private void button34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button34ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Pessego AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (55,'" + data + "', 1.45, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button34ActionPerformed

    private void button35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button35ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Tangerina AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (57,'" + data + "', 1.39, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button35ActionPerformed

    private void button36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button36ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Uva AG", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (56,'" + data + "', 1.45, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button36ActionPerformed

    private void button37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button37ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Abacaxi LT", (4.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (58,'" + data + "', 1.92, 4.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button37ActionPerformed

    private void button38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button38ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco A.Hortela LT", (4.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (59,'" + data + "', 1.92, 4.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button38ActionPerformed

    private void button40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button40ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco F. Vermelhas LT", (4.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (61,'" + data + "', 2.20, 4.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button40ActionPerformed

    private void button41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button41ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Goiaba LT", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (62,'" + data + "', 2.20, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button41ActionPerformed

    private void button47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button47ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Pessego LT", (4.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (68,'" + data + "', 1.90, 4.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button47ActionPerformed

    private void button42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button42ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Limao LT", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (53,'" + data + "', 1.60, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button42ActionPerformed

    private void button43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button43ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Mamao LT", (4.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (64,'" + data + "', 1.74, 4.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button43ActionPerformed

    private void button44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button44ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Manga LT", (4.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (65,'" + data + "', 1.74, 4.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button44ActionPerformed

    private void button45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button45ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Maracuja LT", (3.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (66,'" + data + "', 2.30, 3.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button45ActionPerformed

    private void button46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button46ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Morango LT", (4.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (67,'" + data + "', 2.14, 4.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button46ActionPerformed

    private void button39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button39ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Suco Coco LT", (4.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (60,'" + data + "', 2.38, 4.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button39ActionPerformed

    private void button48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button48ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Agua", (2.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (69,'" + data + "', 1.00, 2.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button48ActionPerformed

    private void button49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button49ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Coca", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (70,'" + data + "', 1.35, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button49ActionPerformed

    private void button50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button50ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Fanta", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (71,'" + data + "', 1.35, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button50ActionPerformed

    private void button51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button51ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Schweppes", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (73,'" + data + "', 1.45, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button51ActionPerformed

    private void button52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button52ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Guarana", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (72,'" + data + "', 1.29, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button52ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"C. Brahma", (3.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (74,'" + data + "', 1.79, 3.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Budwiser", (4.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (69,'" + data + "', 1.99, 4.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button2ActionPerformed

    private void PesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PesquisaActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
    float vendas = 1;
    float custo = 1;
    float desperdiciof = 1;
    float soma = 0;
    
        try {   
        String SQL = "select sum (valor)from vendas_prod where vendas_prod.data='"+Pesquisa.getText()+"'";
        Conecta_banco.ExecuteSQL(SQL);
        if (Conecta_banco.resultset.next()) {  
            vendas=Conecta_banco.resultset.getFloat(1);
            Venda.setText(Float.toString(Conecta_banco.resultset.getFloat(1)));  
        }
    } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro ao somar os campos..." + erro);
        }
        try {   
        String SQL = "select sum (custo) from vendas_prod where vendas_prod.data='"+Pesquisa.getText()+"'";
        Conecta_banco.ExecuteSQL(SQL);
        if (Conecta_banco.resultset.next()) {  
            custo=Conecta_banco.resultset.getFloat(1);
            CustoDiario.setText(Float.toString(Conecta_banco.resultset.getFloat(1)));  
        }
    } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro ao somar os campos..." + erro);
        }
        try {   
        String SQL = "select sum (valor) from desperdicio where desperdicio.data='"+Pesquisa.getText()+"'";
        Conecta_banco.ExecuteSQL(SQL);
        if (Conecta_banco.resultset.next()) {  
            desperdiciof=Conecta_banco.resultset.getFloat(1);
            Desperdicio.setText(Float.toString(Conecta_banco.resultset.getFloat(1)));  
        }
    } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro ao somar os campos..." + erro);
        }
         soma = (((vendas-custo)-desperdiciof)-187);
         Lucro.setText(Float.toString(soma));
    }//GEN-LAST:event_button3ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
try {
            String sqlInsert = "INSERT INTO DESPERDICIO (DATA, VALOR) VALUES ('" + data + "', "+Desperdicio.getText()+")";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            JOptionPane.showMessageDialog(null, "Desperdicio gravado com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button5ActionPerformed
    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        double soma = 0.0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            Double valor = (Double) jTable1.getValueAt(i, 1);
            soma += valor.doubleValue();
        }
        Object resposta;
        resposta = JOptionPane.showInputDialog(null, "Digite o nome do cliente:");
        if (resposta == null) {
            resposta = JOptionPane.showInputDialog(null, "Digite o nome do cliente:");
        }
        resposta.toString();

        Object[] opcoes = {"Dinheiro", "CartÃ£o de DÃ©bito", "CartÃ£o de Credito"};
        Object resposta2 = JOptionPane.showInputDialog(null, "Qual a forma de pagamento?", "Selecione",
                JOptionPane.PLAIN_MESSAGE, null, opcoes, "");
        if (resposta2 == "Dinheiro") {
            try {
                String sqlInsert = "INSERT INTO ENTRADA (NOME, VALOR, ID_FORMA_PAGTO, DATA) VALUES ('" + resposta + "'," + soma + ", 1, '" + data + "')";
                Conecta_banco.statement.executeUpdate(sqlInsert);
                this.setAlwaysOnTop(false);
                //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
            }
        }
        if (resposta2 == "CartÃ£o de DÃ©bito") {
            try {
                String sqlInsert = "INSERT INTO ENTRADA (NOME, VALOR, ID_FORMA_PAGTO, DATA) VALUES ('" + resposta + "'," + soma + ", 2, '" + data + "')";
                Conecta_banco.statement.executeUpdate(sqlInsert);
                this.setAlwaysOnTop(false);
                //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
            }
        }
        if (resposta2 == "CartÃ£o de Credito") {
            try {
                String sqlInsert = "INSERT INTO ENTRADA (NOME, VALOR, ID_FORMA_PAGTO, DATA) VALUES ('" + resposta + "'," + soma + ", 3, '" + data + "')";
                Conecta_banco.statement.executeUpdate(sqlInsert);
                this.setAlwaysOnTop(false);
                //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
            }
        }
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setNumRows(0); 
        checkaba.setState(false);
        checkban.setState(false);
        checkmor.setState(false);
        checkovo.setState(false);
        checkbom.setState(false);
        checkwhey.setState(false);
        checkpaco.setState(false);
        checkmel.setState(false);
        checkextra.setState(false);
        checkltpo.setState(false);
        checkltcon.setState(false);
        checkgran.setState(false);
        checkgranu.setState(false);
        checkchocb.setState(false);
        checkconf.setState(false);
        checkfloca.setState(false);
        checkcas.setState(false);
        txttotal.setText(null);
        checkbox16.setState(false);
        checkbox17.setState(false);
        checkbox18.setState(false);
        checkbox19.setState(false);
        checkbox20.setState(false);
        checkbox21.setState(false);
        checkbox22.setState(false);
        checkbox23.setState(false);
        checkbox24.setState(false);
        checkbox25.setState(false);
        checkbox26.setState(false);
        checkbox27.setState(false);
        checkbox28.setState(false);
        checkbox29.setState(false);
        checkbox30.setState(false);
        checkbox31.setState(false);
    }//GEN-LAST:event_button4ActionPerformed

    private void checkbox16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox16MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Morango", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (12,'" + data + "', 0.42, 0.50);";

            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox16MouseClicked

    private void checkbox17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox17MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Banana", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (13,'" + data + "', 0.07, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox17MouseClicked

    private void checkbox18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox18MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Abacaxi", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (14,'" + data + "', 0.24, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox18MouseClicked

    private void checkbox19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox19MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"PaÃ§oca", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (15,'" + data + "', 0.50, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox19MouseClicked

    private void checkbox20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox20MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Leite em PÃ³", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (16,'" + data + "', 0.36, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox20MouseClicked

    private void checkbox21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox21MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Granola", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (17,'" + data + "', 0.32, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox21MouseClicked

    private void checkbox22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox22MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Ovomaltine", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (18,'" + data + "', 0.36, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox22MouseClicked

    private void checkbox23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox23MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Castanha", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (19,'" + data + "', 0.48, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox23MouseClicked

    private void checkbox24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox24MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"L. Condensado", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (20,'" + data + "', 0.30, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox24MouseClicked

    private void checkbox25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox25MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"ChocoBall", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (21,'" + data + "', 0.35, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox25MouseClicked

    private void checkbox26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox26MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Flocos de Arroz", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (22,'" + data + "', 0.40, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox26MouseClicked

    private void checkbox27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox27MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Granulado", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (23,'" + data + "', 0.53, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox27MouseClicked

    private void checkbox28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox28MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Confete", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (24,'" + data + "', 1.39, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox28MouseClicked

    private void checkbox29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox29MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Bombom", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (25,'" + data + "', 0.89, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox29MouseClicked

    private void checkbox30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox30MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Whey Protein", (0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (26,'" + data + "', 0.75, 0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox30MouseClicked

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        Conecta_banco.Desconecta();
        System.exit(0);
    }//GEN-LAST:event_button6ActionPerformed

    private void ValorpgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValorpgKeyPressed
        float valorTotal=0;  
        DecimalFormat format = new DecimalFormat("0.00");  
        valorTotal = (Float.parseFloat(Valorpg.getText()) - Float.parseFloat(txttotalcopia.getText()));  
        trocopg.setText(format.format(valorTotal));
    }//GEN-LAST:event_ValorpgKeyPressed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Salgado", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (82,'" + data + "', 1.35, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button7ActionPerformed

    private void button13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button13ActionPerformed
    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Caldo Q", (10.90)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (81,'" + data + "', 1.30, 10.90);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button13ActionPerformed

    private void checkbox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox1MouseClicked
DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Desconto", (-0.50)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (80,'" + data + "', 0.00, -0.50);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_checkbox1MouseClicked

    private void button54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button54ActionPerformed
         try {   
            Fechamento Fc = new Fechamento();
            Fc.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button54ActionPerformed

    private void button14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button14ActionPerformed
        Object Resposta3;
        Resposta3 = JOptionPane.showInputDialog(null, "Digite a Sua Senha", "Senha", JOptionPane.QUESTION_MESSAGE);
        if (Resposta3.equals("Morango")){
            button54.setEnabled(true);
            button56.setEnabled(true);
            Lucro.setVisible(true);
            CustoDiario.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "VocÃª nÃ£o tem Acesso!");
        }
    }//GEN-LAST:event_button14ActionPerformed

    private void button56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button56ActionPerformed
try {   
            TelaConsultas TC = new TelaConsultas();
            TC.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button56ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Salgado", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (82,'" + data + "', 1.35, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button8ActionPerformed

    private void button11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button11ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Salgado", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (82,'" + data + "', 1.35, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button11ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Salgado", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (82,'" + data + "', 1.35, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button9ActionPerformed

    private void button10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button10ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Salgado", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (82,'" + data + "', 1.35, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button10ActionPerformed

    private void button12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button12ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{"Salgado", (3.00)});
        Valor();
        try {
            String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (83,'" + data + "', 1.50, 3.00);";
            Conecta_banco.statement.executeUpdate(sqlInsert);
            this.setAlwaysOnTop(false);
            //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
        }
    }//GEN-LAST:event_button12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaInicial().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextField CustoDiario;
    private java.awt.TextField CustoFixo;
    private java.awt.TextField Desperdicio;
    private javax.swing.JLabel Fundo;
    private java.awt.Label LbData;
    private java.awt.TextField Lucro;
    private javax.swing.JTextField Pesquisa;
    private javax.swing.JTextField Valorpg;
    private java.awt.TextField Venda;
    private java.awt.Button btacai1l;
    private java.awt.Button btacai300;
    private java.awt.Button btacai500;
    private java.awt.Button btacaifit300;
    private java.awt.Button btacaifit500;
    private java.awt.Button btacaihmon300;
    private java.awt.Button btacaihmon500;
    private java.awt.Button btacaihulk300;
    private java.awt.Button btacaihulk500;
    private java.awt.Button btacaithal300;
    private java.awt.Button btacaithal500;
    private java.awt.Button btlimpar;
    private java.awt.Button btshake300;
    private java.awt.Button btshake500;
    private java.awt.Button btshake700;
    private java.awt.Button btsucoacai300;
    private java.awt.Button btsucoacai500;
    private java.awt.Button btsucoacai700;
    private java.awt.Button button1;
    private java.awt.Button button10;
    private java.awt.Button button11;
    private java.awt.Button button12;
    private java.awt.Button button13;
    private java.awt.Button button14;
    private java.awt.Button button15;
    private java.awt.Button button16;
    private java.awt.Button button17;
    private java.awt.Button button18;
    private java.awt.Button button19;
    private java.awt.Button button2;
    private java.awt.Button button20;
    private java.awt.Button button21;
    private java.awt.Button button22;
    private java.awt.Button button23;
    private java.awt.Button button24;
    private java.awt.Button button25;
    private java.awt.Button button26;
    private java.awt.Button button27;
    private java.awt.Button button28;
    private java.awt.Button button29;
    private java.awt.Button button3;
    private java.awt.Button button30;
    private java.awt.Button button31;
    private java.awt.Button button32;
    private java.awt.Button button33;
    private java.awt.Button button34;
    private java.awt.Button button35;
    private java.awt.Button button36;
    private java.awt.Button button37;
    private java.awt.Button button38;
    private java.awt.Button button39;
    private java.awt.Button button4;
    private java.awt.Button button40;
    private java.awt.Button button41;
    private java.awt.Button button42;
    private java.awt.Button button43;
    private java.awt.Button button44;
    private java.awt.Button button45;
    private java.awt.Button button46;
    private java.awt.Button button47;
    private java.awt.Button button48;
    private java.awt.Button button49;
    private java.awt.Button button5;
    private java.awt.Button button50;
    private java.awt.Button button51;
    private java.awt.Button button52;
    private java.awt.Button button54;
    private java.awt.Button button56;
    private java.awt.Button button6;
    private java.awt.Button button7;
    private java.awt.Button button8;
    private java.awt.Button button9;
    private java.awt.Checkbox checkaba;
    private java.awt.Checkbox checkban;
    private java.awt.Checkbox checkbom;
    private java.awt.Checkbox checkbox1;
    private java.awt.Checkbox checkbox16;
    private java.awt.Checkbox checkbox17;
    private java.awt.Checkbox checkbox18;
    private java.awt.Checkbox checkbox19;
    private java.awt.Checkbox checkbox20;
    private java.awt.Checkbox checkbox21;
    private java.awt.Checkbox checkbox22;
    private java.awt.Checkbox checkbox23;
    private java.awt.Checkbox checkbox24;
    private java.awt.Checkbox checkbox25;
    private java.awt.Checkbox checkbox26;
    private java.awt.Checkbox checkbox27;
    private java.awt.Checkbox checkbox28;
    private java.awt.Checkbox checkbox29;
    private java.awt.Checkbox checkbox30;
    private java.awt.Checkbox checkbox31;
    private java.awt.Checkbox checkcas;
    private java.awt.Checkbox checkchocb;
    private java.awt.Checkbox checkconf;
    private java.awt.Checkbox checkextra;
    private java.awt.Checkbox checkfloca;
    private java.awt.Checkbox checkgran;
    private java.awt.Checkbox checkgranu;
    private java.awt.Checkbox checkltcon;
    private java.awt.Checkbox checkltpo;
    private java.awt.Checkbox checkmel;
    private java.awt.Checkbox checkmor;
    private java.awt.Checkbox checkovo;
    private java.awt.Checkbox checkpaco;
    private java.awt.Checkbox checkwhey;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label14;
    private java.awt.Label label15;
    private java.awt.Label label16;
    private java.awt.Label label17;
    private java.awt.Label label18;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private javax.swing.JTextField trocopg;
    private javax.swing.JTextField txttotal;
    private javax.swing.JTextField txttotalcopia;
    // End of variables declaration//GEN-END:variables
    public void Valor() {
        double soma = 0.0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            Double valor = (Double) jTable1.getValueAt(i, 1);
            soma += valor.doubleValue();
        }
        txttotal.setText((String.valueOf(soma+"0")));
        txttotalcopia.setText((String.valueOf(soma+"0")));
    }
    
    public void ComplementoGratis(){
        Object[] opcoes = {"Morango","Banana","Abacaxi", "PaÃ§oca","Leite em PÃ³","Granola",
            "Ovomaltine","Castanha","L.Condensado","ChocoBall","Flocos de Arroz",
            "Granulado","Confete","Bombom","Whey","Mel","Extra","Nenhum"};  
        Object resposta = JOptionPane.showInputDialog(null, "Escolha um complemento que serÃ¡ gratuito" , "Selecao de itens" ,  
        JOptionPane.PLAIN_MESSAGE , null ,opcoes,"");
                if ((resposta == "Morango")||(resposta == "Banana")|| (resposta == "Abacaxi")||
                (resposta == "PaÃ§oca")||(resposta == "Leite em PÃ³")||
                (resposta == "Granola")||(resposta == "Ovomaltine")||
                (resposta == "Castanha")||(resposta == "L.Condensado")||
                (resposta == "ChocoBall")||(resposta == "Flocos de Arroz")||
                (resposta == "Granulado")||(resposta == "Confete")||
                (resposta == "Bombom")||(resposta == "Whey")||
                (resposta == "Mel")||(resposta == "Extra")){
                DefaultTableModel mode = (DefaultTableModel) jTable1.getModel();
                mode.addRow(new Object[]{"Complemento GrÃ¡tis", 0.00});
                 Valor();
                    try {
                        String sqlInsert = "INSERT INTO VENDAS_PROD (ID_PROD, DATA, CUSTO, VALOR) VALUES (79,'" + data + "', 0.55, 0.00);";
                        //criei o produto Complemento gratis no banco e fiz um custo baseado na media de todos+
                        //na proxima atualiazaÃ§Ã£o crie um metodo para cada botÃ£o de aÃ§ai e coloque o custo real lincado com
                        //o produto real. FaÃ§a varios IF's para cada produto.
                        Conecta_banco.statement.executeUpdate(sqlInsert);
                        this.setAlwaysOnTop(false);
                        //JOptionPane.showMessageDialog(null, "GravaÃ§Ã£o Realizada com sucesso!");
                    } catch (SQLException erro) {
                        JOptionPane.showMessageDialog(null, "NÃ£o foi possivel gravar dados " + erro);
                    }
                } 
    }
}
